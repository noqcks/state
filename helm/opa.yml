---
# Source: opa/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: opa
  labels:
    app: opa
    chart: opa-1.12.0
    release: "opa"
    heritage: "Helm"
---
# Source: opa/templates/mgmt-clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app: opa
    chart: opa-1.12.0
    heritage: Helm
    release: opa
    component: mgmt
  name: opa-mgmt
rules:
  []
---
# Source: opa/templates/mgmt-clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  labels:
    app: opa
    chart: opa-1.12.0
    heritage: Helm
    release: opa
    component: mgmt
  name: opa-mgmt
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: opa-mgmt
subjects:
  - kind: ServiceAccount
    name: opa
    namespace: opa
---
# Source: opa/templates/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: opa
  labels:
    app: opa
    chart: "opa-1.12.0"
    release: "opa"
    heritage: "Helm"
spec:
  selector:
    app: opa
  ports:
  - name: https
    protocol: TCP
    port: 443
    targetPort: 443
---
# Source: opa/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: opa
  labels:
    app: opa
    chart: "opa-1.12.0"
    release: "opa"
    heritage: "Helm"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: opa
  template:
    metadata:
      annotations:
        checksum/certs: 3d4531e1b749b702a7e1e533aef5b0c736551671fba53ee681882320dcaa158e
      labels:
        app: opa
      name: opa
    spec:
      initContainers:
        - name: initpolicy
          image: openpolicyagent/kube-mgmt:0.9
          imagePullPolicy: IfNotPresent
          resources:
            {}
          command:
          - /bin/sh
          - -c
          - |
            tr -dc 'A-F0-9' < /dev/urandom | dd bs=1 count=32 2>/dev/null > /bootstrap/mgmt-token
            TOKEN=`cat /bootstrap/mgmt-token`
            cat > /bootstrap/authz.rego <<EOF
            package system.authz
            default allow = false
            # Allow anonymous access to the default policy decision.
            allow { input.path = [""]; input.method = "POST" }
            allow { input.path = [""]; input.method = "GET" }
            # This is only used for health check in liveness and readiness probe
            allow { input.path = ["health"]; input.method = "GET" }
            allow { input.identity == "$TOKEN" }
            EOF
          volumeMounts:
            - name: bootstrap
              mountPath: /bootstrap

      containers:
        - name: opa
          image: openpolicyagent/opa:0.14.1
          imagePullPolicy: IfNotPresent
          resources:
            {}
          args:
            - "run"
            - "--server"
            - "--tls-cert-file=/certs/tls.crt"
            - "--tls-private-key-file=/certs/tls.key"
            - "--addr=0.0.0.0:443"
            - "--log-level=info"
            - "--log-format=text"
            - "--authentication=token"
            - "--authorization=basic"
            - "--ignore=.*"
            - "--addr=http://127.0.0.1:8181"
            - "/bootstrap"
          volumeMounts:
            - name: certs
              readOnly: true
              mountPath: /certs
            - name: bootstrap
              readOnly: true
              mountPath: /bootstrap
          readinessProbe:
            httpGet:
              path: /health
              port: 443
              scheme: HTTPS
            initialDelaySeconds: 3
            periodSeconds: 5
          livenessProbe:
            httpGet:
              path: /health
              port: 443
              scheme: HTTPS
            initialDelaySeconds: 3
            periodSeconds: 5
        - name: mgmt
          image: openpolicyagent/kube-mgmt:0.9
          imagePullPolicy: IfNotPresent
          resources:
            {}
          args:
            - --opa-auth-token-file=/bootstrap/mgmt-token
            - --opa-url=http://127.0.0.1:8181/v1
            - --replicate-path=kubernetes
            - --enable-policies=false
          volumeMounts:
            - name: bootstrap
              readOnly: true
              mountPath: /bootstrap
      serviceAccountName: opa
      volumes:
        - name: certs
          secret:
            secretName: opa-cert
        - name: bootstrap
          emptyDir: {}
      nodeSelector:
        {}
      tolerations:
        []
---
# Source: opa/templates/webhookconfiguration.yaml
kind: ValidatingWebhookConfiguration
apiVersion: admissionregistration.k8s.io/v1beta1
metadata:
  name: opa
  annotations:
  labels:
    app: opa
    chart: "opa-1.12.0"
    release: "opa"
    heritage: "Helm"
webhooks:
  - name: webhook.openpolicyagent.org
    namespaceSelector:
      matchExpressions:
      - key: openpolicyagent.org/webhook
        operator: NotIn
        values:
        - ignore

    failurePolicy: Ignore
    rules:
      - apiGroups:
        - '*'
        apiVersions:
        - '*'
        operations:
        - '*'
        resources:
        - '*'
    clientConfig:


      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURBakNDQWVxZ0F3SUJBZ0lRQ3JMTHBiL1pJRlVZS1dxN0F1bHRIakFOQmdrcWhraUc5dzBCQVFzRkFEQWIKTVJrd0Z3WURWUVFERXhCdmNHRXRZV1J0YVhOemFXOXVMV05oTUI0WERURTVNVEV4T1RJeE5UVTFNbG9YRFRJNQpNVEV4TmpJeE5UVTFNbG93R3pFWk1CY0dBMVVFQXhNUWIzQmhMV0ZrYldsemMybHZiaTFqWVRDQ0FTSXdEUVlKCktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQVBOYUdJcHMvb3cyQjFKajU2T2VyeUNaSjNPSExELzIKeG9pMXdkUWJiUmNXdkNwMkV0bkVRclZUMm91WFZva1pBYkxNaTJVQXRJcHVuSDdPT0RaSTRPa2dzSEVLRi9zUwpkSUFhZnVuOG1zNTdiOUVuSVRyVGx6WXpKN1VxUjg4QVF6Y0lJemN3VHJ5eW1reDhGWnVQZ09BdThPVU5UbDkzClpaQkFzbStjOGFnSXhCSFZlNnRJNk5MV1dicHM1UEluTERjTmxDNE16SmhnVUVsbTdHZmNBQUtXTWMvQzVFdVQKMk1QY1FGR3k3NDBNKyswazZkN2s0OXFBUFNLWTdNQ2RVLzFvSjVORTFkYXdMUlNSUFNaM29tc3pvUm1tT0R6SwpMa2FCeFFWbmZsZU95TUN0dkx1UEY4YnNHTUh3SmVKWEpVZXdKMEowWEkrblpDQmcxREl3R0k4Q0F3RUFBYU5DCk1FQXdEZ1lEVlIwUEFRSC9CQVFEQWdLa01CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0QKQWpBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFEbHY4L0pRM29CbWlWWAoxSlNLc3dVWndyd3BHR3FOWUthaHRXQXhHNFdCc1dFSUh0ZG4zWFI5N0kya2Y4MnhVZWtTMjNQOFVzcXpSZStaCnBRUU9vUUhLd2tQZFRnRHp5MDljZzA3K1FqRCt4M0ZMeWI5RzdHM0dEaCtYcDlIUzhHOW5MbWFFWm9aSWNHYUEKMGdjc1p4YzJrNEpoeE1ONVVKVEJqRGdWTjREeWgyWUZmQlJUcFlHMXpqaUhxRmZKeGovSTRkK05WRlQ1Mmo2SQpOTGxHUFFrN0E3OFZCQXdGSGc4djlDVWprcDhOWkEwVEV6WHJDazhYb2RyZGtrVGZIVjJKS1ZGLzJWU2xsbkVQCml4L1pid1M3TXgxeHBWLzhXL0VhcHhPdFg0dGhFRzVFc0tJL0hJQVQvOGRocm5ZL1plTWdNR1NadVZEV3EyaTQKbzRWMTFrK0cKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=


      service:
        name: opa
        namespace: opa
    sideEffects: Unknown
